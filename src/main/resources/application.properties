server.port=8080

#spring.datasource.url=jdbc:mysql://localhost:3306/wawa-sandwish-db
spring.datasource.url=jdbc:mysql://localhost:3306/wawa-sandwish-db?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
#spring.datasource.url=jdbc:sqlserver://localhost;databaseName=wawa-sandwish-db;portNumber=1433
#spring.datasource.username=app-user
#spring.datasource.password=Password1$

spring.datasource.username=root
spring.datasource.password=root

spring.jpa.show-sql=true
#spring.datasource.driver.class=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.datasource.driver.class=com.mysql.jdbc.Driver

# Hibernate
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
#hikari config
spring.datasource.hikari.minimum-idle=15
spring.datasource.hikari.maximum.pool.size-idle=100
#hibernate.show_sql=true
#hibernate.hbm2ddl.auto=create
spring.jpa.hibernate.ddl-auto=update
#spring.datasource.schema = wawa-sandwish-db

#spring.jpa.properties.hibernate.default_schema=wawa-sandwish-db
#spring.datasource.schema=
#About OSIV
#In every @Controller/@RestController action, instead of throwing a LazyInitializationException
# when you forget to fetch a lazy-loaded property, Spring will now fetch the property outside of the original transaction.
# The pattern (or antipattern) is called Open Session In View (OSIV) and, while it sounds fairly useful,
# is not a good choice for production environments.
spring.jpa.open-in-view=false 
#ThreadPool Executor
executor-core-size=20
executor-pool-size=20
executor-queue-size=200


